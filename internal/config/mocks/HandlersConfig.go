// Code generated by mockery v2.52.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// HandlersConfig is an autogenerated mock type for the HandlersConfig type
type HandlersConfig struct {
	mock.Mock
}

// BooksURL provides a mock function with no fields
func (_m *HandlersConfig) BooksURL() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for BooksURL")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// DefaultBooksLimit provides a mock function with no fields
func (_m *HandlersConfig) DefaultBooksLimit() int {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for DefaultBooksLimit")
	}

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// DefaultBooksPageNumber provides a mock function with no fields
func (_m *HandlersConfig) DefaultBooksPageNumber() int {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for DefaultBooksPageNumber")
	}

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// FormatHTML provides a mock function with no fields
func (_m *HandlersConfig) FormatHTML() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for FormatHTML")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// FormatJSON provides a mock function with no fields
func (_m *HandlersConfig) FormatJSON() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for FormatJSON")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// FormatPDF provides a mock function with no fields
func (_m *HandlersConfig) FormatPDF() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for FormatPDF")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// HTML provides a mock function with no fields
func (_m *HandlersConfig) HTML() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for HTML")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// HTTPBodySize provides a mock function with no fields
func (_m *HandlersConfig) HTTPBodySize() int64 {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for HTTPBodySize")
	}

	var r0 int64
	if rf, ok := ret.Get(0).(func() int64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int64)
	}

	return r0
}

// JSON provides a mock function with no fields
func (_m *HandlersConfig) JSON() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for JSON")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// NotFoundURL provides a mock function with no fields
func (_m *HandlersConfig) NotFoundURL() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for NotFoundURL")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// PDF provides a mock function with no fields
func (_m *HandlersConfig) PDF() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for PDF")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// StaticsURL provides a mock function with no fields
func (_m *HandlersConfig) StaticsURL() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for StaticsURL")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// TemplatesURL provides a mock function with no fields
func (_m *HandlersConfig) TemplatesURL() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for TemplatesURL")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// NewHandlersConfig creates a new instance of HandlersConfig. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewHandlersConfig(t interface {
	mock.TestingT
	Cleanup(func())
}) *HandlersConfig {
	mock := &HandlersConfig{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
